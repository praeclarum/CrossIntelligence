name: Build

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
  workflow_dispatch:
    inputs:
      package:
        description: "Build package?"
        required: true
        type: choice
        options:
          - "Yes"
          - "No"
        default: "No"

jobs:
  build:
    name: Build iOS and Mac
    runs-on: macos-26

    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: "26.0"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - name: Install Workloads
      run: dotnet workload restore CrossIntelligence.sln

    - name: Set package Version from run number
      shell: bash
      run: sed -i '' -E 's#(<Version>)([0-9]+\.[0-9]+)\.[0-9]+(</Version>)#\1\2.'"${GITHUB_RUN_NUMBER}"'\3#' CrossIntelligence/CrossIntelligence.csproj

    - name: Build
      run: dotnet build -c Release CrossIntelligence/CrossIntelligence.csproj

    - name: Test
      run: dotnet test -c Release -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} Tests/Tests.csproj

    - name: Build Sample
      run: dotnet build -c Release -f net9.0-maccatalyst26.0 -r maccatalyst-arm64 Sample/CrossIntelligenceSample.csproj

    - name: Package
      if: github.event.inputs.package == 'Yes'
      run: dotnet pack -c Release -o PackageOut CrossIntelligence/CrossIntelligence.csproj

    - name: Upload Artifacts
      if: github.event.inputs.package == 'Yes'
      uses: actions/upload-artifact@v4
      with:
        name: CrossIntelligenceNuGetPackage
        path: ./PackageOut
